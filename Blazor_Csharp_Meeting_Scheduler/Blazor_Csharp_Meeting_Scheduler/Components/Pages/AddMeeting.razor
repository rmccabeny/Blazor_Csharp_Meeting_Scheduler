@page "/add-meeting"
@using Blazor_Csharp_Meeting_Scheduler.Models
@inject Blazor_Csharp_Meeting_Scheduler.Services.MeetingService MeetingService
@inject Blazor_Csharp_Meeting_Scheduler.Services.DepartmentService DepartmentService
@inject Blazor_Csharp_Meeting_Scheduler.Services.EmployeeService EmployeeService
@inject NavigationManager NavigationManager

<PageTitle>Add New Meeting</PageTitle>

<h3>Add New Meeting</h3>

<!-- create a form to add data to the meetings-->
<EditForm Model="@newMeeting" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Meeting ID:</label>
        <InputNumber TValue="int" @bind-Value="newMeeting.MeetingId" class="form-control" />
    </div>
    <div>
        <label>Department Id:</label>
        <InputNumber TValue="int" @bind-Value="newMeeting.DepartmentId" class="form-control" />
    </div>
    <div>
        <label>Department Name:</label>
        <InputSelect @bind-Value="newMeeting.DepartmentName" class="form-control" @onchange="OnDepartmentChange">
            @foreach (var department in departments)
            {
                <option value="@department.DepartmentName">@department.DepartmentName</option>
            }
        </InputSelect>
    </div>
    <div>
        <label>Employee Name:</label>
        <InputSelect @bind-Value="newMeeting.EmployeeName" class="form-control">
            @foreach (var employee in employees)
            {
                <option value="@employee.EmployeeName">@employee.EmployeeName</option>
            }
        </InputSelect>
    </div>
    <div>
        <label>Employee Email:</label>
        <InputText @bind-Value="newMeeting.EmployeeEmail" class="form-control" />
    </div>
    <div>
        <label>Phone:</label>
        <InputText @bind-Value="newMeeting.EmployeePhone" class="form-control" />
    </div>
    <div>
        <label>Manager Name:</label>
        <InputText @bind-Value="newMeeting.ManagerName" class="form-control" readonly />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>


@code {
    //  constructor to create a new meeting
    private Meeting newMeeting = new Meeting
    {
        MeetingId = 0,
        MeetingTitle = string.Empty,
        DepartmentId = 0,
        DepartmentName = string.Empty,
        EmployeeName = string.Empty,
        EmployeeEmail = string.Empty,
        EmployeePhone = string.Empty,
        ManagerName = string.Empty,
        MeetingDateTime = DateTime.Now
    };

    private List<Department> departments = new List<Department>();
    private List<Employee> employees = new List<Employee>();

    protected override async Task OnInitializedAsync()
    {
        departments = await DepartmentService.GetDepartmentsAsync();
        employees = await EmployeeService.GetEmployeesAsync();
    }

    private void OnDepartmentChange(ChangeEventArgs e)
    {
        var selectedDepartment = e.Value?.ToString() ?? string.Empty;
        var manager = employees.FirstOrDefault(emp => emp.DepartmentName == selectedDepartment && emp.IsManager);
        newMeeting.ManagerName = manager?.EmployeeName ?? "No Manager";
    }

    private async Task HandleValidSubmit()
    {
        await MeetingService.AddMeetingAsync(newMeeting);
        NavigationManager.NavigateTo("/");
    }
}
